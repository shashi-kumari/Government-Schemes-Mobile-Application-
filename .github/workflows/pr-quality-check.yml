name: PR Quality Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  quality-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Check code formatting
      run: |
        echo "Checking Java code formatting..."
        find app/src -name "*.java" -exec grep -l "public class" {} \; | head -5
        
    - name: Compile and check for warnings
      run: ./gradlew compileDebugJavaWithJavac --no-daemon --stacktrace
      
    - name: Run quick tests
      run: ./gradlew testDebugUnitTest --no-daemon --stacktrace
      
    - name: Generate lint report
      run: ./gradlew lintDebug --no-daemon --stacktrace
      continue-on-error: true
      
    - name: Check for common issues
      run: |
        echo "Checking for common Android issues..."
        echo "1. Checking for hardcoded strings (should use strings.xml)..."
        if grep -r "android:text=\"[^@]" app/src/main/res/layout/ 2>/dev/null; then
          echo "⚠️  Found hardcoded strings in layouts"
        else
          echo "✅ No hardcoded strings found in layouts"
        fi
        
        echo "2. Checking for TODO comments..."
        if find app/src -name "*.java" -exec grep -l "TODO" {} \; 2>/dev/null; then
          echo "⚠️  Found TODO comments"
        else
          echo "✅ No TODO comments found"
        fi
      
    - name: PR Summary Comment
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          let comment = '## 🔍 PR Quality Check Results\n\n';
          comment += '### ✅ Build Status\n';
          comment += '- **Compilation**: Passed\n';
          comment += '- **Unit Tests**: Completed\n';
          comment += '- **Lint Analysis**: Generated\n\n';
          comment += '### 📝 Code Quality Notes\n';
          comment += '- Please ensure all hardcoded strings are moved to `strings.xml`\n';
          comment += '- Consider adding JavaDoc comments for public methods\n';
          comment += '- Review lint warnings and address critical issues\n\n';
          comment += '### 📊 Artifacts\n';
          comment += '- Build artifacts and reports are available in the workflow run\n';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
      continue-on-error: true